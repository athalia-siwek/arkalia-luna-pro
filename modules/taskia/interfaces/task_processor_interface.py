#!/usr/bin/env python3
"""
üåï TaskIA Task Processor Interface
üìù Interface pour le traitement des t√¢ches selon le principe ISP
üîß Version: 2.0.0
üë§ Author: Athalia
üìÖ Created: 2025-01-27
"""

from abc import ABC, abstractmethod
from typing import Dict, Any


class ITaskProcessor(ABC):
    """
    Interface pour le traitement des t√¢ches.
    
    Principe ISP : Interface sp√©cifique pour le traitement
    Principe LSP : Permet la substitution de processeurs
    """
    
    @abstractmethod
    def process(self, context: Dict[str, Any]) -> str:
        """
        Traite le contexte et g√©n√®re un r√©sultat format√©.
        
        Args:
            context: Contexte √† traiter
            
        Returns:
            R√©sultat format√©
        """
        pass
    
    @abstractmethod
    def validate_context(self, context: Dict[str, Any]) -> bool:
        """
        Valide le contexte d'entr√©e.
        
        Args:
            context: Contexte √† valider
            
        Returns:
            True si le contexte est valide
        """
        pass 