name: 🚀 Arkalia-LUNA CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: 🧪 Run tests
        run: |
          python -m pytest tests/ -v --cov=modules --cov-report=xml --cov-report=html

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: 🔒 Security scan
        run: |
          pip install bandit safety
          bandit -r modules/ -f json -o bandit-report.json
          safety check

      - name: 📋 Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: bandit-report.json

  performance:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: 📦 Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest-benchmark

      - name: ⚡ Performance tests
        run: |
          python -m pytest tests/performance/ --benchmark-only --benchmark-sort=mean

  integration:
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: 📦 Install dependencies
        run: |
          pip install -r requirements.txt

      - name: 🔗 Integration tests
        run: |
          python test_phase8_integration.py
          python -m pytest tests/integration/ -v

  build:
    runs-on: ubuntu-latest
    needs: [test, security, integration]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: 🐳 Build Docker image
        run: |
          docker build -t arkalia-luna:latest .
          docker tag arkalia-luna:latest arkalia-luna:${{ github.sha }}

      - name: 📦 Push to registry
        run: |
          echo "Docker image built successfully"
          # Uncomment when registry is configured
          # docker push arkalia-luna:latest
          # docker push arkalia-luna:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🚀 Deploy to staging
        run: |
          echo "Deploying Arkalia-LUNA to staging environment"
          # Add deployment commands here
          # kubectl apply -f k8s/staging/
          # or docker-compose up -d

  notify:
    runs-on: ubuntu-latest
    needs: [test, security, integration, build]
    if: always()

    steps:
      - name: 📧 Notify team
        run: |
          if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.security.result }}" == "success" ]; then
            echo "✅ All checks passed - Arkalia-LUNA is ready for deployment"
          else
            echo "❌ Some checks failed - Review required"
          fi
