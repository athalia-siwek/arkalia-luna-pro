# ðŸš€ Arkalia-LUNA Pro - Docker Compose SimplifiÃ© et OptimisÃ©
# Configuration garantie fonctionnelle

version: '3.8'

services:
  # ðŸš€ API Arkalia - Version simplifiÃ©e mais optimisÃ©e
  arkalia-api:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.10-slim
        WORKDIR /app
        COPY requirements.txt ./
        RUN pip install --no-cache-dir -r requirements.txt
        COPY helloria ./helloria
        COPY modules ./modules
        COPY config ./config
        COPY state ./state
        EXPOSE 8000
        CMD ["uvicorn", "helloria.core:app", "--host", "0.0.0.0", "--port", "8000"]
    container_name: arkalia-api-optimized
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./state:/app/state
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'

  # ðŸ¤– AssistantIA - Version simplifiÃ©e
  assistantia:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.10-slim
        WORKDIR /app
        COPY requirements.txt ./
        RUN pip install --no-cache-dir -r requirements.txt
        COPY modules/assistantia ./modules/assistantia
        COPY modules/__init__.py ./modules/
        COPY config ./config
        COPY state ./state
        ENV PYTHONPATH=/app
        EXPOSE 8001
        CMD ["uvicorn", "modules.assistantia.core:app", "--host", "0.0.0.0", "--port", "8001"]
    container_name: assistantia-optimized
    ports:
      - "8001:8001"
    volumes:
      - ./logs:/app/logs
      - ./state:/app/state
    depends_on:
      - arkalia-api
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.8'

  # ðŸ”„ ReflexIA - Version simplifiÃ©e  
  reflexia:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.10-slim
        WORKDIR /app
        COPY requirements.txt ./
        RUN pip install --no-cache-dir -r requirements.txt
        COPY modules/reflexia ./modules/reflexia
        COPY modules/__init__.py ./modules/
        COPY run_reflexia.py ./
        COPY config ./config
        COPY state ./state
        ENV PYTHONPATH=/app
        CMD ["python", "run_reflexia.py"]
    container_name: reflexia-optimized
    volumes:
      - ./logs:/app/logs
      - ./state:/app/state
    depends_on:
      - assistantia
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.6'

  # ðŸ§  ZeroIA - Version Enhanced simplifiÃ©e
  zeroia:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.10-slim
        WORKDIR /app
        COPY requirements.txt ./
        RUN pip install --no-cache-dir -r requirements.txt
        COPY modules/zeroia ./modules/zeroia
        COPY modules/__init__.py ./modules/
        COPY scripts/demo_orchestrator_enhanced.py ./scripts/
        COPY config ./config
        COPY state ./state
        ENV PYTHONPATH=/app
        CMD ["python", "scripts/demo_orchestrator_enhanced.py", "--mode", "daemon"]
    container_name: zeroia-optimized
    volumes:
      - ./logs:/app/logs
      - ./state:/app/state
    depends_on:
      - reflexia
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.2'

  # ðŸ§¬ Sandozia - Version Intelligence CroisÃ©e simplifiÃ©e
  sandozia:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.10-slim
        WORKDIR /app
        COPY requirements.txt ./
        RUN pip install --no-cache-dir -r requirements.txt
        COPY modules/sandozia ./modules/sandozia
        COPY modules/__init__.py ./modules/
        COPY scripts/demo_sandozia.py ./scripts/
        COPY config ./config
        COPY state ./state
        ENV PYTHONPATH=/app
        CMD ["python", "scripts/demo_sandozia.py", "--daemon"]
    container_name: sandozia-optimized
    volumes:
      - ./logs:/app/logs
      - ./state:/app/state
    depends_on:
      - zeroia
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.5'

  # ðŸ§  Cognitive Reactor - RÃ©actions automatiques
  cognitive-reactor:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.10-slim
        WORKDIR /app
        COPY requirements.txt ./
        RUN pip install --no-cache-dir -r requirements.txt
        COPY modules/sandozia ./modules/sandozia
        COPY modules/__init__.py ./modules/
        COPY scripts/arkalia_enhanced_integration.py ./scripts/
        COPY config ./config
        COPY state ./state
        ENV PYTHONPATH=/app
        ENV COGNITIVE_REACTOR_ENABLED=true
        ENV CHRONALIA_ENABLED=true
        CMD ["python", "scripts/arkalia_enhanced_integration.py", "--mode", "daemon"]
    container_name: cognitive-reactor-optimized
    volumes:
      - ./logs:/app/logs
      - ./state:/app/state
    depends_on:
      - sandozia
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.6'

networks:
  default:
    name: arkalia_optimized_network
