#!/usr/bin/env python3
"""
Script pour v√©rifier les tests skipped dans Arkalia-LUNA Pro
"""

import os
import subprocess
import sys
from pathlib import Path


def main():
    """Fonction principale pour v√©rifier les tests skipped."""
    print("üîç V√©rification des tests skipped - Arkalia-LUNA Pro")
    print("=" * 60)

    # V√©rifier que nous sommes dans le bon r√©pertoire
    if not Path("pyproject.toml").exists():
        print("‚ùå Erreur: pyproject.toml non trouv√©. Ex√©cutez depuis la racine du projet.")
        sys.exit(1)

    try:
        # Collecter les tests avec marqueurs chaos et performance
        print("\nüìä Collecte des tests chaos et performance...")
        result = subprocess.run(
            [
                "python",
                "-m",
                "pytest",
                "--collect-only",
                "-q",
                "-m",
                "chaos or performance",
                "--disable-warnings",
            ],
            capture_output=True,
            text=True,
            timeout=30,
        )

        if result.returncode == 0:
            print("‚úÖ Tests collect√©s avec succ√®s")
            print("\nüìã R√©sum√© des tests collect√©s:")
            print(result.stdout)
        else:
            print("‚ö†Ô∏è Erreur lors de la collecte:")
            print(result.stderr)

    except subprocess.TimeoutExpired:
        print("‚è∞ Timeout lors de la collecte des tests")
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

    print("\nüí° Conseils:")
    print("- Utilisez 'ARK_FORCE_OLLAMA=true pytest -m performance' pour forcer les tests Ollama")
    print("- Utilisez 'ARK_RUN_CHAOS=true pytest -m chaos' pour ex√©cuter les tests de chaos")
    print("- V√©rifiez manuellement les conditions skipif si n√©cessaire")


if __name__ == "__main__":
    main()
