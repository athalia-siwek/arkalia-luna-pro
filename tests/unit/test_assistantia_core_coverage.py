
import pytest
from fastapi.testclient import TestClient

from modules.assistantia.core import app, get_query_ollama, process_input


@pytest.fixture
def test_client() -> TestClient:
    """Client de test pour l'app FastAPI."""
    return TestClient(app)


def test_chat_route_exists():
    """âœ… VÃ©rifie que l'application FastAPI est bien instanciÃ©e."""
    assert app is not None


def test_process_input_empty():
    """âœ… Teste le traitement d'une entrÃ©e vide."""
    assert process_input("") == "Tu as dit : "


def test_process_input_normal():
    """âœ… Teste le traitement d'une entrÃ©e normale avec respect de la casse."""
    assert process_input("Bonjour") == "Tu as dit : Bonjour"


def test_chat_post(test_client: TestClient):
    """âœ… Teste l'endpoint /chat avec une dÃ©pendance mockÃ©e."""

    def mock_query_ollama(msg: str, model: str = "mistral") -> str:
        return msg  # pas de doublon, le formatting se fait dans process_input

    try:
        # ğŸ§ª Surcharge de la dÃ©pendance
        app.dependency_overrides[get_query_ollama] = lambda: mock_query_ollama

        response = test_client.post("/chat", json={"message": "Bonjour"})
        assert response.status_code == 200

        json_data = response.json()
        assert "rÃ©ponse" in json_data
        assert json_data["rÃ©ponse"] == "Tu as dit : Bonjour"

    finally:
        # ğŸ§¼ Nettoyage dans tous les cas
        app.dependency_overrides.clear()