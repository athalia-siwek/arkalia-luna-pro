[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "arkalia-luna-pro"
version = "2.8.0"
description = "Arkalia-LUNA Pro - Kernel IA Ultra-Protection"
authors = [{ name = "Athalia", email = "athalia@arkalia-luna.com" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "toml>=0.10.2",
    "asyncio-mqtt>=0.16.0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
    "docker>=6.1.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "black",
    "ruff",
    "isort",
    "pre-commit",
    "bandit",
]

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP"]
ignore = ["E501", "E203", "F401", "F841", "B008", "C901"]

[tool.ruff.lint.per-file-ignores]
"scripts/demo_*.py" = ["E402", "F401"]
"scripts/arkalia_enhanced_integration.py" = ["F401"]
"scripts/ark-master-*.py" = ["E402", "F401"]
"tests/**/*.py" = ["F841", "E402"]
"modules/**/*.py" = ["W293"]
"modules/generative_ai/generated/test_core.py" = ["I001", "E", "W", "F", "B", "C4", "UP"]

[tool.ruff.lint.isort]
known-first-party = ["modules", "scripts"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | generated
  | cache
  | logs
  | state
  | htmlcov
  | benchmark_results
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["modules", "scripts"]
skip_glob = [
    "*/generated/*",
    "*/venv/*",
    "*/cache/*",
    "*/logs/*",
    "*/state/*",
    "*/htmlcov/*",
    "*/benchmark_results/*"
]

[tool.coverage.run]
source = ["modules", "scripts"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/generated/*",
    "*/cache/*",
    "*/logs/*",
    "*/state/*",
    "*/htmlcov/*",
    "*/benchmark_results/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=modules",
    "--cov=scripts",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=28",
    "--ignore=modules/generative_ai/generated/"
]
markers = [
    "slow: tests lents",
    "integration: tests d'intégration",
    "unit: tests unitaires",
    "performance: tests de performance",
    "security: tests de sécurité",
    "chaos: tests de chaos"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "io_safe\\.py$",
    "tests/chaos/chaos_common\\.py$",
    "tests/common/test_helpers\\.py$",
    "scripts/.*\\.py$",
    "modules/.*/generated/.*\\.py$",
    "modules/generative_ai/generated/.*\\.py$",
    "modules/.*\\.py$"
]

[tool.flake8]
max-line-length = 100
ignore = ["E402", "F841", "W293", "F401", "F811", "E203"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    "venv",
    ".venv",
    "generated",
    "cache",
    "logs",
    "state",
    "htmlcov",
    "benchmark_results"
]
