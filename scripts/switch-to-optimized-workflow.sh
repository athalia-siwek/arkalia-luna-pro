#!/bin/bash

# üîÑ Script de basculement vers le workflow optimis√©
# Usage: ./scripts/switch-to-optimized-workflow.sh

set -e

echo "üîÑ Basculement vers le workflow optimis√© Arkalia-LUNA"
echo "===================================================="
echo ""

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rification des pr√©requis
log_info "V√©rification des pr√©requis..."

if [ ! -f ".github/workflows/deploy.yml" ]; then
    log_error "Workflow actuel non trouv√©: .github/workflows/deploy.yml"
    exit 1
fi

if [ ! -f ".github/workflows/deploy-optimized.yml" ]; then
    log_error "Workflow optimis√© non trouv√©: .github/workflows/deploy-optimized.yml"
    exit 1
fi

log_success "Fichiers de workflow trouv√©s"

# Sauvegarde du workflow actuel
log_info "Sauvegarde du workflow actuel..."
if [ -f ".github/workflows/deploy-backup.yml" ]; then
    log_warning "Backup existant d√©tect√©, remplacement..."
    rm .github/workflows/deploy-backup.yml
fi

cp .github/workflows/deploy.yml .github/workflows/deploy-backup.yml
log_success "Workflow actuel sauvegard√©: .github/workflows/deploy-backup.yml"

# Remplacement par le workflow optimis√©
log_info "Remplacement par le workflow optimis√©..."
cp .github/workflows/deploy-optimized.yml .github/workflows/deploy.yml
log_success "Workflow optimis√© install√©: .github/workflows/deploy.yml"

# V√©rification de la syntaxe
log_info "V√©rification de la syntaxe du nouveau workflow..."
if command -v yamllint &> /dev/null; then
    if yamllint .github/workflows/deploy.yml; then
        log_success "Syntaxe YAML valide"
    else
        log_warning "Probl√®me de syntaxe YAML d√©tect√©"
    fi
else
    log_warning "yamllint non disponible, v√©rification manuelle recommand√©e"
fi

# Affichage des diff√©rences principales
echo ""
log_info "Principales am√©liorations du workflow optimis√©:"
echo "=================================================="
echo "‚úÖ Timeouts augment√©s:"
echo "   - Build: 30min ‚Üí 60min"
echo "   - Push: 15min ‚Üí 45min"
echo "   - E2E: 45min ‚Üí 60min"
echo ""
echo "‚úÖ Retry logic am√©lior√©e:"
echo "   - Health checks: 10 tentatives ‚Üí 15 tentatives"
echo "   - Timeout par tentative: 10s ‚Üí 30s"
echo "   - Intervalle entre tentatives: 10s ‚Üí 15s"
echo ""
echo "‚úÖ Cache Docker optimis√©:"
echo "   - Compression gzip activ√©e"
echo "   - Debug flags pour BuildKit"
echo "   - Cache local am√©lior√©"
echo ""
echo "‚úÖ Gestion d'erreurs renforc√©e:"
echo "   - Validation manuelle des Dockerfiles"
echo "   - V√©rification des images construites"
echo "   - Rapports d√©taill√©s d'√©chec"

# Test de validation
echo ""
log_info "Test de validation du workflow..."
if [ -f "scripts/diagnose-docker-issues.sh" ]; then
    log_info "Ex√©cution du diagnostic Docker..."
    ./scripts/diagnose-docker-issues.sh | head -20
    log_success "Diagnostic Docker termin√©"
else
    log_warning "Script de diagnostic non trouv√©"
fi

# Instructions pour le d√©ploiement
echo ""
log_info "Instructions pour le d√©ploiement:"
echo "===================================="
echo ""
echo "1. Commitez les changements:"
echo "   git add .github/workflows/deploy.yml"
echo "   git commit -m 'feat: switch to optimized Docker workflow'"
echo ""
echo "2. Poussez vers GitHub:"
echo "   git push origin dev-migration"
echo ""
echo "3. Surveillez le d√©ploiement:"
echo "   - Allez sur GitHub Actions"
echo "   - V√©rifiez le workflow 'Deploy Arkalia-LUNA'"
echo "   - Surveillez les logs en temps r√©el"
echo ""
echo "4. En cas de probl√®me:"
echo "   - Restaurez le backup: mv .github/workflows/deploy-backup.yml .github/workflows/deploy.yml"
echo "   - Consultez les logs d'erreur"
echo "   - Ex√©cutez: ./scripts/diagnose-docker-issues.sh"

# V√©rification finale
echo ""
log_info "V√©rification finale..."
if [ -f ".github/workflows/deploy.yml" ] && [ -f ".github/workflows/deploy-backup.yml" ]; then
    log_success "Basculement r√©ussi!"
    log_info "Workflow actuel: .github/workflows/deploy.yml"
    log_info "Backup: .github/workflows/deploy-backup.yml"
else
    log_error "Probl√®me lors du basculement"
    exit 1
fi

echo ""
log_success "Basculement vers le workflow optimis√© termin√©!"
log_info "Le prochain push d√©clenchera le nouveau workflow avec des timeouts augment√©s." 